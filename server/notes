general:
npm start   ----   changed to this in script from: node index.js run from inside server folder will start the express server
early heroku deployment - I like this so far
I never knew when you could/should deploy, but this guy is doing it as soon as express is set up
     I like this because it feels like solid footing, somthing to stand on, an answer to a question





heroku notes:
heroku dictates which ports your app needs to listen to
I don't recall what the following does, but for some reason
we need to use a specific verson of npm and node? seems odd
"engines": {
    "node": "8.1.1",
    "npm": "5.0.3"
  },

  Logging in... done
Logged in as beckaaronr@gmail.com
Aarons-MacBook-Air:server aaronrbeck$ heroku create
Creating app... done, â¬¢ serene-hollows-22376
https://serene-hollows-22376.herokuapp.com/ | https://git.heroku.com/serene-hollows-22376.git
serene-hollows-22376                                    indentifies name of your app to heroku        
https://serene-hollows-22376.herokuapp.com/             where we send visitors
https://git.heroku.com/serene-hollows-22376.git         deployment target a git repository that we can push our local code base to

heroku open     will open your projct

once you add a folder or file to git, it should be "greyed out"






google oauth notes:
passport has at least 2 libraries:

- passport : general helpers
- passport strategy: helps for authenticating one specific method





Lesson 25 - set up app.get in index.js
lesson 26 - fix the google redirect error by providing a valid redirect url
lesson 27 - got user token to console.log in termianl
lesson 28 - after our user comes back with a valid token after granting us passport access we can now save them to our database
lesson 29 - added nodemon
lesson 30 - server structure refactor
lesson 31 - theory of authentication lecture
lesson 32 - signing in users with oauth lecture
lesson 33 - mongo lecture
lesson 34 - setup mongoatlas cluster added mongo cluster info to keys.js
lesson 35 - mlab setup info - I skipped this as mLab does not exist
lesson 36 - npm install mongoose
lesson 37 - mongo lecture
lesson 38 - added User.js and a mongoose schema to users.js and created a mongo model class
lesson 39 - a lot of explaination, might be worth a re-watch, save a new record to mongodb
lesson 40 - modified callback in passport js to prevent duplicate users from being created in mongodb
lesson 41 - added "done" to our callback statement in passport.js
42 - added .serializeUser to passport.js
43 - added .deserializeUser to passport.js
44 - tell passport to use cookies, added cookie-session because express does not know how to handle cookies
  required cookie-session as well as passport on import statements in index.js
  added app.use(cookieSession({})) in index.js
  added keys to keys.js for our cookie session

45 - added app.get('/api/current_user', (req, res) to authRoutes.js
46 - added app.get('/api/logout', (req, res) to authRoutes.js
47 -





where I'm stuck:



how I got unstuck:


lesson 25- spelling error
  tried to start server at 5000 by running node index.js
  I got this: passport.use(new GoogleStrategy({
              ^

  TypeError: GoogleStrategy is not a constructor
  over at index.js I'm told:
  Could not find a declaration file for module 'passport-google-oauth20
  so I never npm installed google oauth 2.0?
  I went back and re-watched lesson 19
  so I went back and npm install --save passport-google-oauth20 and still no love.
  I checked spelling on passport import statements - no love there either
  Ok, I think i found the problem: it was a misspelling.  I changed my incorrect require('passport-google-oauth20').Strategy20
  to require('passport-google-oauth20').Strategy

lesson 26/27  - re-did things 3 times


  so I created credentials with http://localhost:5000 and http://localhost:5000/auth/google/callback in the apporpriate input boxes
  I've added clientID and client secret to keys.js, 
  then ran node index.js, then navigate to localhost:5000/auth/google in browser
  I'm still landing on the Error: redirect_uri_mismatchm, following the console link does actually take me back to the correct developer console
  that was not the case only moments ago.  I will give google 5 minutes to get things in their system.  fingers crossed
  I'm in.  not sure why/how, but oh, well

lesson 39 - import order of operations
  This was actually something that the instructor walkec
  us through, but still something good to remember - 
  if server crashes or does not start it may be due to 
  over of operations of require statements

lesson 



